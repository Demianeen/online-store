version: '3.1'

services: 
  postgres:
    container_name: postgres
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: clothes_online_store
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    # build: ./nginx
    depends_on:
      - api
      - client
      - certbot
    restart: unless-stopped
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./data/certbot/conf:/etc/letsencrypt/:ro
      - ./data/certbot/www:/var/www/certbot/:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    ports:
      - "81:80"
      - "444:443"

  certbot:
    image: certbot/certbot:latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./data/certbot/www:/var/www/certbot:rw
    command: renew
      
  # our server
  api: 
    container_name: api
    build: ./server
    depends_on: 
      - postgres
    volumes:
      - /app/node_modules
      - ./server:/app
      - /etc/letsencrypt/live/store.mybrandview.co.uk:/etc/letsencrypt/live/store.mybrandview.co.uk
      - /etc/letsencrypt/archive/store.mybrandview.co.uk:/etc/letsencrypt/archive/store.mybrandview.co.uk
    ports:
      - "8080:4000"
      - "8081:4443"
    env_file: ./server/.env
    restart: unless-stopped
  
  client: 
    build: ./client
    depends_on: 
      - api
    stdin_open: true
    env_file: ./client/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes: 
      - /app/node_modules
      - ./client:/app
      
volumes:
  pgdata:
  # certbot_challenges: 
     